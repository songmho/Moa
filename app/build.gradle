ext {
    verCode = 9

    // Jenkins로 빌드하는 경우 BUILD_NUMBER를 Version Code로 사용한다.
    buildNumber = "$System.env.BUILD_NUMBER"
    if (buildNumber.toString().size() > 0 && buildNumber.isInteger()) verCode = buildNumber.toInteger()
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.team1.valueupapp"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode verCode
        versionName "1.20"
    }

    if (project.hasProperty("store_file")) {
        println 'Store File:' + store_file
        File signFile = rootProject.file(store_file)
        if (signFile.exists()) {
            signingConfigs {
                release {
                    storeFile signFile
                    storePassword store_password
                    keyAlias key_alias
                    keyPassword key_password
                }
            }
        } else {
            println 'No Keystore file..'
        }
    } else {
        println 'No store_file property'
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (project.hasProperty("store_file")) {
                File signFile = rootProject.file(store_file)
                if (signFile.exists()) {
                    signingConfig signingConfigs.release
                }
            }
        }

        debug {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            if (project.hasProperty("store_file")) {
                File signFile = rootProject.file(store_file)
                if (signFile.exists()) {
                    signingConfig signingConfigs.release
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        // preDexLibraries = false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.android.support:cardview-v7:22.1.1'
    compile 'com.android.support:recyclerview-v7:22.1.1'
    compile 'com.android.support:design:22.2.0'
    compile files('lib/Parse-1.9.3.jar')
    compile 'com.parse.bolts:bolts-android:1.+'
    compile fileTree(dir: 'libs', include: 'Parse-*.jar')
    compile 'de.hdodenhof:circleimageview:1.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.4.0@aar') {
        transitive = true;
    }
    compile 'com.getbase:floatingactionbutton:1.10.1'
}
